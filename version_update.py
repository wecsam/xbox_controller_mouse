#!/usr/bin/env python3
import importlib.util, os.path, sys

__all__ = ("update", "reset_to_zero", "increment_revision_if_not_frozen")

VERSION_PY_FILE = os.path.join(
    os.path.dirname(os.path.abspath(__file__)),
    "version.py"
)

def _module_from_file(module_name, file_path):
    spec = importlib.util.spec_from_file_location(module_name, file_path)
    module = importlib.util.module_from_spec(spec)
    spec.loader.exec_module(module)
    return module
def version_module():
    return _module_from_file("version", VERSION_PY_FILE)
def update(major, minor, build, revision):
    with open(VERSION_PY_FILE, "w") as fout:
        print("#!/usr/bin/env python3", file=fout)
        print("# DO NOT EDIT!", file=fout)
        print("# This file is automatically generated.", file=fout)
        print("# MAJOR and MINOR should be updated in make.py.", file=fout)
        print("# BUILD and REVISION are incremented automatically.", file=fout)
        print("MAJOR =", repr(major), file=fout)
        print("MINOR =", repr(minor), file=fout)
        print("BUILD =", repr(build), file=fout)
        print("REVISION =", repr(revision), file=fout)
def reset_to_zero():
    update(0, 0, 0, 0)
def increment_revision():
    # Increment the revision number if this is running from source.
    version = version_module()
    update(
        version.MAJOR,
        version.MINOR,
        version.BUILD,
        version.REVISION + 1
    )
def _main():
    if len(sys.argv) > 1:
        if sys.argv[1] == "display_current":
            func = lambda: None
        else:
            func = globals().get(sys.argv[1])
        if func:
            func(*sys.argv[2:])
            version = version_module()
            print(
                "The version is now: {}.{}.{}.{}".format(
                    version.MAJOR,
                    version.MINOR,
                    version.BUILD,
                    version.REVISION
                )
            )
            return
    print("Available options:")
    for varname in __all__:
        print(" -", varname)
    print(" - display_current")

if __name__ == "__main__":
    _main()
